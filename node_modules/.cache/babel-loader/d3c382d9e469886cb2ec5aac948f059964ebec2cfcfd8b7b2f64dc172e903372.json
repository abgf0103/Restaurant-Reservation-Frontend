{"ast":null,"code":"var _jsxFileName = \"C:\\\\react-workspace\\\\layout\\\\src\\\\pages\\\\review\\\\Review.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport { getTokenInfo } from \"../../hooks/tokenSlice\";\nimport { getUserInfo } from \"../../hooks/userSlice\";\nimport axios from \"axios\";\nimport Swal from \"sweetalert2\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Review = () => {\n  _s();\n  const navigate = useNavigate();\n\n  // Redux에서 로그인 정보를 가져옴\n  const tokenInfo = useSelector(getTokenInfo);\n  const userInfo = useSelector(getUserInfo);\n\n  // 리뷰 작성 상태\n  const [review, setReview] = useState({\n    storeId: \"\",\n    // 예시로 storeId를 추가, 실제로 필요한 storeId를 받아와야 함\n    rating: \"\",\n    reviewComment: \"\"\n  });\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  useEffect(() => {\n    // 로그인된 상태인지 확인\n    const storedTokenInfo = JSON.parse(localStorage.getItem(\"tokenInfo\"));\n    const storedUserInfo = JSON.parse(localStorage.getItem(\"userInfo\"));\n    if (storedTokenInfo && storedUserInfo) {\n      setIsAuthenticated(true);\n    } else if (tokenInfo && userInfo) {\n      setIsAuthenticated(true);\n    } else {\n      // 로그인 안 되어 있으면 로그인 페이지로 리다이렉트\n      navigate(\"/user/login\");\n    }\n  }, [tokenInfo, userInfo, navigate]);\n  if (!isAuthenticated) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 12\n    }, this); // 로그인 상태가 아닌 경우 로딩 화면\n  }\n\n  // 리뷰 작성 상태 업데이트\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setReview(prevState => ({\n      ...prevState,\n      [name]: value\n    }));\n  };\n\n  // 리뷰 저장하기 (백엔드로 POST 요청)\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      // 로그인 상태에서 인증된 토큰을 헤더에 추가\n      const token = `${tokenInfo.tokenType} ${tokenInfo.accessToken}`;\n\n      // 리뷰를 백엔드로 전송 (엔드포인트 수정)\n      const response = await axios.post(`${process.env.REACT_APP_HOST}/review/save`,\n      // URL 수정\n      {\n        storeId: review.storeId,\n        rating: review.rating,\n        reviewComment: review.reviewComment\n      }, {\n        headers: {\n          Authorization: token\n        }\n      });\n      if (response.status === 200) {\n        Swal.fire({\n          title: \"성공\",\n          text: \"리뷰가 저장되었습니다.\",\n          icon: \"success\"\n        });\n        // 리뷰 저장 후 메인 페이지로 이동\n        navigate(\"/\"); // or navigate(\"/reviews\") 등\n      }\n    } catch (err) {\n      console.error(\"Review save error:\", err);\n      Swal.fire({\n        title: \"실패\",\n        text: \"리뷰 저장에 실패했습니다.\",\n        icon: \"error\"\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uB9AC\\uBDF0 \\uC791\\uC131 \\uD398\\uC774\\uC9C0\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Store ID:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"storeId\",\n          value: review.storeId,\n          onChange: handleChange,\n          placeholder: \"\\uAC00\\uAC8C ID\\uB97C \\uC785\\uB825\\uD558\\uC138\\uC694.\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Rating:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          name: \"rating\",\n          value: review.rating,\n          onChange: handleChange,\n          min: \"1\",\n          max: \"5\",\n          placeholder: \"1\\uC5D0\\uC11C 5 \\uC0AC\\uC774\\uB85C \\uD3C9\\uAC00\\uD574\\uC8FC\\uC138\\uC694.\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Review Comment:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          name: \"reviewComment\",\n          value: review.reviewComment,\n          onChange: handleChange,\n          placeholder: \"\\uB9AC\\uBDF0\\uB97C \\uC791\\uC131\\uD574\\uC8FC\\uC138\\uC694.\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"\\uB9AC\\uBDF0 \\uC791\\uC131\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n};\n_s(Review, \"QrAGedsEu7lDleM7x0Dh3FUiCJ8=\", false, function () {\n  return [useNavigate, useSelector, useSelector];\n});\n_c = Review;\nexport default Review;\nvar _c;\n$RefreshReg$(_c, \"Review\");","map":{"version":3,"names":["useState","useEffect","useNavigate","useSelector","getTokenInfo","getUserInfo","axios","Swal","jsxDEV","_jsxDEV","Review","_s","navigate","tokenInfo","userInfo","review","setReview","storeId","rating","reviewComment","isAuthenticated","setIsAuthenticated","storedTokenInfo","JSON","parse","localStorage","getItem","storedUserInfo","children","fileName","_jsxFileName","lineNumber","columnNumber","handleChange","e","name","value","target","prevState","handleSubmit","preventDefault","token","tokenType","accessToken","response","post","process","env","REACT_APP_HOST","headers","Authorization","status","fire","title","text","icon","err","console","error","onSubmit","type","onChange","placeholder","required","min","max","_c","$RefreshReg$"],"sources":["C:/react-workspace/layout/src/pages/review/Review.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { getTokenInfo } from \"../../hooks/tokenSlice\";\r\nimport { getUserInfo } from \"../../hooks/userSlice\";\r\nimport axios from \"axios\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nconst Review = () => {\r\n  const navigate = useNavigate();\r\n\r\n  // Redux에서 로그인 정보를 가져옴\r\n  const tokenInfo = useSelector(getTokenInfo);\r\n  const userInfo = useSelector(getUserInfo);\r\n\r\n  // 리뷰 작성 상태\r\n  const [review, setReview] = useState({\r\n    storeId: \"\", // 예시로 storeId를 추가, 실제로 필요한 storeId를 받아와야 함\r\n    rating: \"\",\r\n    reviewComment: \"\",\r\n  });\r\n\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n\r\n  useEffect(() => {\r\n    // 로그인된 상태인지 확인\r\n    const storedTokenInfo = JSON.parse(localStorage.getItem(\"tokenInfo\"));\r\n    const storedUserInfo = JSON.parse(localStorage.getItem(\"userInfo\"));\r\n\r\n    if (storedTokenInfo && storedUserInfo) {\r\n      setIsAuthenticated(true);\r\n    } else if (tokenInfo && userInfo) {\r\n      setIsAuthenticated(true);\r\n    } else {\r\n      // 로그인 안 되어 있으면 로그인 페이지로 리다이렉트\r\n      navigate(\"/user/login\");\r\n    }\r\n  }, [tokenInfo, userInfo, navigate]);\r\n\r\n  if (!isAuthenticated) {\r\n    return <div>Loading...</div>; // 로그인 상태가 아닌 경우 로딩 화면\r\n  }\r\n\r\n  // 리뷰 작성 상태 업데이트\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setReview((prevState) => ({\r\n      ...prevState,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  // 리뷰 저장하기 (백엔드로 POST 요청)\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      // 로그인 상태에서 인증된 토큰을 헤더에 추가\r\n      const token = `${tokenInfo.tokenType} ${tokenInfo.accessToken}`;\r\n\r\n      // 리뷰를 백엔드로 전송 (엔드포인트 수정)\r\n      const response = await axios.post(\r\n        `${process.env.REACT_APP_HOST}/review/save`, // URL 수정\r\n        {\r\n          storeId: review.storeId,\r\n          rating: review.rating,\r\n          reviewComment: review.reviewComment,\r\n        },\r\n        {\r\n          headers: {\r\n            Authorization: token,\r\n          },\r\n        }\r\n      );\r\n\r\n      if (response.status === 200) {\r\n        Swal.fire({\r\n          title: \"성공\",\r\n          text: \"리뷰가 저장되었습니다.\",\r\n          icon: \"success\",\r\n        });\r\n        // 리뷰 저장 후 메인 페이지로 이동\r\n        navigate(\"/\"); // or navigate(\"/reviews\") 등\r\n      }\r\n    } catch (err) {\r\n      console.error(\"Review save error:\", err);\r\n      Swal.fire({\r\n        title: \"실패\",\r\n        text: \"리뷰 저장에 실패했습니다.\",\r\n        icon: \"error\",\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>리뷰 작성 페이지</h1>\r\n      <form onSubmit={handleSubmit}>\r\n        <div>\r\n          <label>Store ID:</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"storeId\"\r\n            value={review.storeId}\r\n            onChange={handleChange}\r\n            placeholder=\"가게 ID를 입력하세요.\"\r\n            required\r\n          />\r\n        </div>\r\n        <div>\r\n          <label>Rating:</label>\r\n          <input\r\n            type=\"number\"\r\n            name=\"rating\"\r\n            value={review.rating}\r\n            onChange={handleChange}\r\n            min=\"1\"\r\n            max=\"5\"\r\n            placeholder=\"1에서 5 사이로 평가해주세요.\"\r\n            required\r\n          />\r\n        </div>\r\n        <div>\r\n          <label>Review Comment:</label>\r\n          <textarea\r\n            name=\"reviewComment\"\r\n            value={review.reviewComment}\r\n            onChange={handleChange}\r\n            placeholder=\"리뷰를 작성해주세요.\"\r\n            required\r\n          />\r\n        </div>\r\n        <button type=\"submit\">리뷰 작성</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Review;\r\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,YAAY,QAAQ,wBAAwB;AACrD,SAASC,WAAW,QAAQ,uBAAuB;AACnD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,IAAI,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/B,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAMC,QAAQ,GAAGV,WAAW,CAAC,CAAC;;EAE9B;EACA,MAAMW,SAAS,GAAGV,WAAW,CAACC,YAAY,CAAC;EAC3C,MAAMU,QAAQ,GAAGX,WAAW,CAACE,WAAW,CAAC;;EAEzC;EACA,MAAM,CAACU,MAAM,EAAEC,SAAS,CAAC,GAAGhB,QAAQ,CAAC;IACnCiB,OAAO,EAAE,EAAE;IAAE;IACbC,MAAM,EAAE,EAAE;IACVC,aAAa,EAAE;EACjB,CAAC,CAAC;EAEF,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGrB,QAAQ,CAAC,KAAK,CAAC;EAE7DC,SAAS,CAAC,MAAM;IACd;IACA,MAAMqB,eAAe,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,CAAC;IACrE,MAAMC,cAAc,GAAGJ,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,CAAC;IAEnE,IAAIJ,eAAe,IAAIK,cAAc,EAAE;MACrCN,kBAAkB,CAAC,IAAI,CAAC;IAC1B,CAAC,MAAM,IAAIR,SAAS,IAAIC,QAAQ,EAAE;MAChCO,kBAAkB,CAAC,IAAI,CAAC;IAC1B,CAAC,MAAM;MACL;MACAT,QAAQ,CAAC,aAAa,CAAC;IACzB;EACF,CAAC,EAAE,CAACC,SAAS,EAAEC,QAAQ,EAAEF,QAAQ,CAAC,CAAC;EAEnC,IAAI,CAACQ,eAAe,EAAE;IACpB,oBAAOX,OAAA;MAAAmB,QAAA,EAAK;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,CAAC,CAAC;EAChC;;EAEA;EACA,MAAMC,YAAY,GAAIC,CAAC,IAAK;IAC1B,MAAM;MAAEC,IAAI;MAAEC;IAAM,CAAC,GAAGF,CAAC,CAACG,MAAM;IAChCrB,SAAS,CAAEsB,SAAS,KAAM;MACxB,GAAGA,SAAS;MACZ,CAACH,IAAI,GAAGC;IACV,CAAC,CAAC,CAAC;EACL,CAAC;;EAED;EACA,MAAMG,YAAY,GAAG,MAAOL,CAAC,IAAK;IAChCA,CAAC,CAACM,cAAc,CAAC,CAAC;IAClB,IAAI;MACF;MACA,MAAMC,KAAK,GAAG,GAAG5B,SAAS,CAAC6B,SAAS,IAAI7B,SAAS,CAAC8B,WAAW,EAAE;;MAE/D;MACA,MAAMC,QAAQ,GAAG,MAAMtC,KAAK,CAACuC,IAAI,CAC/B,GAAGC,OAAO,CAACC,GAAG,CAACC,cAAc,cAAc;MAAE;MAC7C;QACE/B,OAAO,EAAEF,MAAM,CAACE,OAAO;QACvBC,MAAM,EAAEH,MAAM,CAACG,MAAM;QACrBC,aAAa,EAAEJ,MAAM,CAACI;MACxB,CAAC,EACD;QACE8B,OAAO,EAAE;UACPC,aAAa,EAAET;QACjB;MACF,CACF,CAAC;MAED,IAAIG,QAAQ,CAACO,MAAM,KAAK,GAAG,EAAE;QAC3B5C,IAAI,CAAC6C,IAAI,CAAC;UACRC,KAAK,EAAE,IAAI;UACXC,IAAI,EAAE,cAAc;UACpBC,IAAI,EAAE;QACR,CAAC,CAAC;QACF;QACA3C,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC;MACjB;IACF,CAAC,CAAC,OAAO4C,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CAAC,oBAAoB,EAAEF,GAAG,CAAC;MACxCjD,IAAI,CAAC6C,IAAI,CAAC;QACRC,KAAK,EAAE,IAAI;QACXC,IAAI,EAAE,gBAAgB;QACtBC,IAAI,EAAE;MACR,CAAC,CAAC;IACJ;EACF,CAAC;EAED,oBACE9C,OAAA;IAAAmB,QAAA,gBACEnB,OAAA;MAAAmB,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClBvB,OAAA;MAAMkD,QAAQ,EAAEpB,YAAa;MAAAX,QAAA,gBAC3BnB,OAAA;QAAAmB,QAAA,gBACEnB,OAAA;UAAAmB,QAAA,EAAO;QAAS;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACxBvB,OAAA;UACEmD,IAAI,EAAC,MAAM;UACXzB,IAAI,EAAC,SAAS;UACdC,KAAK,EAAErB,MAAM,CAACE,OAAQ;UACtB4C,QAAQ,EAAE5B,YAAa;UACvB6B,WAAW,EAAC,uDAAe;UAC3BC,QAAQ;QAAA;UAAAlC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACT,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACNvB,OAAA;QAAAmB,QAAA,gBACEnB,OAAA;UAAAmB,QAAA,EAAO;QAAO;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACtBvB,OAAA;UACEmD,IAAI,EAAC,QAAQ;UACbzB,IAAI,EAAC,QAAQ;UACbC,KAAK,EAAErB,MAAM,CAACG,MAAO;UACrB2C,QAAQ,EAAE5B,YAAa;UACvB+B,GAAG,EAAC,GAAG;UACPC,GAAG,EAAC,GAAG;UACPH,WAAW,EAAC,0EAAmB;UAC/BC,QAAQ;QAAA;UAAAlC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACT,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACNvB,OAAA;QAAAmB,QAAA,gBACEnB,OAAA;UAAAmB,QAAA,EAAO;QAAe;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAC9BvB,OAAA;UACE0B,IAAI,EAAC,eAAe;UACpBC,KAAK,EAAErB,MAAM,CAACI,aAAc;UAC5B0C,QAAQ,EAAE5B,YAAa;UACvB6B,WAAW,EAAC,0DAAa;UACzBC,QAAQ;QAAA;UAAAlC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACT,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACNvB,OAAA;QAAQmD,IAAI,EAAC,QAAQ;QAAAhC,QAAA,EAAC;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAACrB,EAAA,CA/HID,MAAM;EAAA,QACOR,WAAW,EAGVC,WAAW,EACZA,WAAW;AAAA;AAAA+D,EAAA,GALxBxD,MAAM;AAiIZ,eAAeA,MAAM;AAAC,IAAAwD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}