{"ast":null,"code":"import axios from \"axios\";\nimport { useSelector } from \"react-redux\";\nimport { getTokenInfo } from \"../hooks/tokenSlice\";\nimport { useEffect } from \"react\";\nimport { getStorageToken } from \"../helper/storage\";\nconst instance = axios.create({\n  baseURL: process.env.REACT_APP_HOST,\n  timeout: 10000\n});\nexport default instance;\n\n// request 날리기 전에 axios가 할 일\ninstance.interceptors.request.use(config => {\n  const token = getStorageToken();\n  // config.headers = {\n  //   Authorization: `${token.tokenType}${token.acessToken}`,\n  //   \"Content-Type\": \"application/json\",\n  // };\n  return config;\n}, error => {\n  console.log(\"intercept에서 오류 발생\", error);\n  return Promise.reject(error);\n});\n\n// response 받고 나서 axios가 할 일\ninstance.interceptors.response.use(response => response, async error => {\n  // 오류가 발생하면 뭔가 해라\n  return Promise.reject(error);\n});","map":{"version":3,"names":["axios","useSelector","getTokenInfo","useEffect","getStorageToken","instance","create","baseURL","process","env","REACT_APP_HOST","timeout","interceptors","request","use","config","token","error","console","log","Promise","reject","response"],"sources":["C:/react-workspace/layout/src/api/api.js"],"sourcesContent":["import axios from \"axios\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { getTokenInfo } from \"../hooks/tokenSlice\";\r\nimport { useEffect } from \"react\";\r\nimport { getStorageToken } from \"../helper/storage\";\r\n\r\nconst instance = axios.create({\r\n  baseURL: process.env.REACT_APP_HOST,\r\n  timeout: 10000,\r\n});\r\n\r\nexport default instance;\r\n\r\n// request 날리기 전에 axios가 할 일\r\ninstance.interceptors.request.use(\r\n  (config) => {\r\n    const token = getStorageToken();\r\n    // config.headers = {\r\n    //   Authorization: `${token.tokenType}${token.acessToken}`,\r\n    //   \"Content-Type\": \"application/json\",\r\n    // };\r\n    return config;\r\n  },\r\n  (error) => {\r\n    console.log(\"intercept에서 오류 발생\", error);\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// response 받고 나서 axios가 할 일\r\ninstance.interceptors.response.use(\r\n  (response) => response,\r\n  async (error) => {\r\n    // 오류가 발생하면 뭔가 해라\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,YAAY,QAAQ,qBAAqB;AAClD,SAASC,SAAS,QAAQ,OAAO;AACjC,SAASC,eAAe,QAAQ,mBAAmB;AAEnD,MAAMC,QAAQ,GAAGL,KAAK,CAACM,MAAM,CAAC;EAC5BC,OAAO,EAAEC,OAAO,CAACC,GAAG,CAACC,cAAc;EACnCC,OAAO,EAAE;AACX,CAAC,CAAC;AAEF,eAAeN,QAAQ;;AAEvB;AACAA,QAAQ,CAACO,YAAY,CAACC,OAAO,CAACC,GAAG,CAC9BC,MAAM,IAAK;EACV,MAAMC,KAAK,GAAGZ,eAAe,CAAC,CAAC;EAC/B;EACA;EACA;EACA;EACA,OAAOW,MAAM;AACf,CAAC,EACAE,KAAK,IAAK;EACTC,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEF,KAAK,CAAC;EACvC,OAAOG,OAAO,CAACC,MAAM,CAACJ,KAAK,CAAC;AAC9B,CACF,CAAC;;AAED;AACAZ,QAAQ,CAACO,YAAY,CAACU,QAAQ,CAACR,GAAG,CAC/BQ,QAAQ,IAAKA,QAAQ,EACtB,MAAOL,KAAK,IAAK;EACf;EACA,OAAOG,OAAO,CAACC,MAAM,CAACJ,KAAK,CAAC;AAC9B,CACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}