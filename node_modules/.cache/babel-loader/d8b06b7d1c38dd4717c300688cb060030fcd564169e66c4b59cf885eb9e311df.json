{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { removeStorageToken, setStorageToken } from \"../helper/storage\"; // 로컬스토리지 관리 유틸리티 함수들\n\nconst tokenSlice = createSlice({\n  name: \"token\",\n  initialState: {\n    info: {\n      accessToken: \"\",\n      refreshToken: \"\",\n      tokenType: \"\",\n      expiryDuration: 0\n    }\n  },\n  reducers: {\n    setTokenInfo: (state, action) => {\n      state.info = action.payload;\n      setStorageToken(action.payload); // 토큰을 로컬스토리지에 저장\n    },\n    removeTokenInfo: state => {\n      state.info = {\n        accessToken: \"\",\n        refreshToken: \"\",\n        tokenType: \"\",\n        expiryDuration: 0\n      };\n      removeStorageToken(); // 로컬스토리지에서 토큰 삭제\n    }\n  }\n});\nexport default tokenSlice.reducer;\nexport const {\n  setTokenInfo,\n  removeTokenInfo\n} = tokenSlice.actions;\nexport const getTokenInfo = state => state.token.info;","map":{"version":3,"names":["createSlice","removeStorageToken","setStorageToken","tokenSlice","name","initialState","info","accessToken","refreshToken","tokenType","expiryDuration","reducers","setTokenInfo","state","action","payload","removeTokenInfo","reducer","actions","getTokenInfo","token"],"sources":["C:/react-workspace/kh_final_react/src/hooks/tokenSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { removeStorageToken, setStorageToken } from \"../helper/storage\"; // 로컬스토리지 관리 유틸리티 함수들\r\n\r\nconst tokenSlice = createSlice({\r\n    name: \"token\",\r\n    initialState: {\r\n        info: {\r\n            accessToken: \"\",\r\n            refreshToken: \"\",\r\n            tokenType: \"\",\r\n            expiryDuration: 0,\r\n        },\r\n    },\r\n    reducers: {\r\n        setTokenInfo: (state, action) => {\r\n            state.info = action.payload;\r\n            setStorageToken(action.payload); // 토큰을 로컬스토리지에 저장\r\n        },\r\n        removeTokenInfo: (state) => {\r\n            state.info = {\r\n                accessToken: \"\",\r\n                refreshToken: \"\",\r\n                tokenType: \"\",\r\n                expiryDuration: 0,\r\n            };\r\n            removeStorageToken(); // 로컬스토리지에서 토큰 삭제\r\n        },\r\n    },\r\n});\r\n\r\nexport default tokenSlice.reducer;\r\nexport const { setTokenInfo, removeTokenInfo } = tokenSlice.actions;\r\nexport const getTokenInfo = (state) => state.token.info;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,kBAAkB,EAAEC,eAAe,QAAQ,mBAAmB,CAAC,CAAC;;AAEzE,MAAMC,UAAU,GAAGH,WAAW,CAAC;EAC3BI,IAAI,EAAE,OAAO;EACbC,YAAY,EAAE;IACVC,IAAI,EAAE;MACFC,WAAW,EAAE,EAAE;MACfC,YAAY,EAAE,EAAE;MAChBC,SAAS,EAAE,EAAE;MACbC,cAAc,EAAE;IACpB;EACJ,CAAC;EACDC,QAAQ,EAAE;IACNC,YAAY,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC7BD,KAAK,CAACP,IAAI,GAAGQ,MAAM,CAACC,OAAO;MAC3Bb,eAAe,CAACY,MAAM,CAACC,OAAO,CAAC,CAAC,CAAC;IACrC,CAAC;IACDC,eAAe,EAAGH,KAAK,IAAK;MACxBA,KAAK,CAACP,IAAI,GAAG;QACTC,WAAW,EAAE,EAAE;QACfC,YAAY,EAAE,EAAE;QAChBC,SAAS,EAAE,EAAE;QACbC,cAAc,EAAE;MACpB,CAAC;MACDT,kBAAkB,CAAC,CAAC,CAAC,CAAC;IAC1B;EACJ;AACJ,CAAC,CAAC;AAEF,eAAeE,UAAU,CAACc,OAAO;AACjC,OAAO,MAAM;EAAEL,YAAY;EAAEI;AAAgB,CAAC,GAAGb,UAAU,CAACe,OAAO;AACnE,OAAO,MAAMC,YAAY,GAAIN,KAAK,IAAKA,KAAK,CAACO,KAAK,CAACd,IAAI","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}