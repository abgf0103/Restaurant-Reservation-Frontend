{"ast":null,"code":"var _jsxFileName = \"C:\\\\kh_final_react\\\\src\\\\pages\\\\review\\\\Review.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { useSelector } from \"react-redux\";\nimport { getTokenInfo } from \"../../hooks/tokenSlice\";\nimport { getUserInfo } from \"../../hooks/userSlice\"; // 로그인된 사용자 정보\nimport Swal from \"sweetalert2\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Review = () => {\n  _s();\n  const navigate = useNavigate();\n  const tokenInfo = useSelector(getTokenInfo);\n  const userInfo = useSelector(getUserInfo);\n  const [review, setReview] = useState({\n    storeId: \"\",\n    rating: \"\",\n    reviewComment: \"\"\n  });\n\n  // 로그인 상태 체크\n  useEffect(() => {\n    if (!tokenInfo.accessToken || !userInfo.username) {\n      // 로그인 안되어 있으면 로그인 페이지로 리다이렉트\n      navigate(\"/user/login\");\n    }\n  }, [navigate, tokenInfo, userInfo]);\n\n  // 리뷰 작성 상태 업데이트\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setReview(prevState => ({\n      ...prevState,\n      [name]: value\n    }));\n  };\n\n  // 리뷰 저장하기 (백엔드로 POST 요청)\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const token = `${tokenInfo.tokenType} ${tokenInfo.accessToken}`;\n      const response = await axios.post(`${process.env.REACT_APP_HOST}/review/save`, {\n        storeId: review.storeId,\n        rating: review.rating,\n        reviewComment: review.reviewComment,\n        userId: userInfo.userId,\n        username: userInfo.username // username 추가\n      }, {\n        headers: {\n          Authorization: token\n        }\n      });\n      if (response.status === 200) {\n        Swal.fire({\n          title: \"성공\",\n          text: \"리뷰가 저장되었습니다.\",\n          icon: \"success\"\n        });\n        navigate(\"/reviewList\"); // 리뷰 목록으로 이동\n      }\n    } catch (err) {\n      console.error(\"Review save error:\", err);\n      Swal.fire({\n        title: \"실패\",\n        text: \"리뷰 저장에 실패했습니다.\",\n        icon: \"error\"\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [userInfo.username, \" \\uACE0\\uAC1D\\uB2D8 \\uB9AC\\uBDF0 \\uC791\\uC131\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Store ID:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"storeId\",\n          value: review.storeId,\n          onChange: handleChange,\n          placeholder: \"\\uAC00\\uAC8C ID\\uB97C \\uC785\\uB825\\uD558\\uC138\\uC694.\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Rating:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          name: \"rating\",\n          value: review.rating,\n          onChange: handleChange,\n          min: \"1\",\n          max: \"5\",\n          placeholder: \"1\\uC5D0\\uC11C 5 \\uC0AC\\uC774\\uB85C \\uD3C9\\uAC00\\uD574\\uC8FC\\uC138\\uC694.\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Review Comment:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          name: \"reviewComment\",\n          value: review.reviewComment,\n          onChange: handleChange,\n          placeholder: \"\\uB9AC\\uBDF0\\uB97C \\uC791\\uC131\\uD574\\uC8FC\\uC138\\uC694.\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"\\uB9AC\\uBDF0 \\uC791\\uC131\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 9\n  }, this);\n};\n_s(Review, \"gpL/2QnWbF92+PbAkJTy9iNv8TM=\", false, function () {\n  return [useNavigate, useSelector, useSelector];\n});\n_c = Review;\nexport default Review;\nvar _c;\n$RefreshReg$(_c, \"Review\");","map":{"version":3,"names":["useState","useEffect","useNavigate","axios","useSelector","getTokenInfo","getUserInfo","Swal","jsxDEV","_jsxDEV","Review","_s","navigate","tokenInfo","userInfo","review","setReview","storeId","rating","reviewComment","accessToken","username","handleChange","e","name","value","target","prevState","handleSubmit","preventDefault","token","tokenType","response","post","process","env","REACT_APP_HOST","userId","headers","Authorization","status","fire","title","text","icon","err","console","error","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","placeholder","required","min","max","_c","$RefreshReg$"],"sources":["C:/kh_final_react/src/pages/review/Review.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { getTokenInfo } from \"../../hooks/tokenSlice\";\r\nimport { getUserInfo } from \"../../hooks/userSlice\"; // 로그인된 사용자 정보\r\nimport Swal from \"sweetalert2\";\r\n\r\nconst Review = () => {\r\n    const navigate = useNavigate();\r\n    const tokenInfo = useSelector(getTokenInfo);\r\n    const userInfo = useSelector(getUserInfo);\r\n\r\n    const [review, setReview] = useState({\r\n        storeId: \"\",\r\n        rating: \"\",\r\n        reviewComment: \"\",\r\n    });\r\n\r\n    // 로그인 상태 체크\r\n    useEffect(() => {\r\n        if (!tokenInfo.accessToken || !userInfo.username) {\r\n            // 로그인 안되어 있으면 로그인 페이지로 리다이렉트\r\n            navigate(\"/user/login\");\r\n        }\r\n    }, [navigate, tokenInfo, userInfo]);\r\n\r\n    // 리뷰 작성 상태 업데이트\r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setReview((prevState) => ({\r\n            ...prevState,\r\n            [name]: value,\r\n        }));\r\n    };\r\n\r\n    // 리뷰 저장하기 (백엔드로 POST 요청)\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            const token = `${tokenInfo.tokenType} ${tokenInfo.accessToken}`;\r\n\r\n            const response = await axios.post(\r\n                `${process.env.REACT_APP_HOST}/review/save`,\r\n                {\r\n                    storeId: review.storeId,\r\n                    rating: review.rating,\r\n                    reviewComment: review.reviewComment,\r\n                    userId: userInfo.userId,\r\n                    username: userInfo.username, // username 추가\r\n                },\r\n                {\r\n                    headers: {\r\n                        Authorization: token,\r\n                    },\r\n                }\r\n            );\r\n\r\n            if (response.status === 200) {\r\n                Swal.fire({\r\n                    title: \"성공\",\r\n                    text: \"리뷰가 저장되었습니다.\",\r\n                    icon: \"success\",\r\n                });\r\n                navigate(\"/reviewList\"); // 리뷰 목록으로 이동\r\n            }\r\n        } catch (err) {\r\n            console.error(\"Review save error:\", err);\r\n            Swal.fire({\r\n                title: \"실패\",\r\n                text: \"리뷰 저장에 실패했습니다.\",\r\n                icon: \"error\",\r\n            });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h1>{userInfo.username} 고객님 리뷰 작성</h1>\r\n            <form onSubmit={handleSubmit}>\r\n                <div>\r\n                    <label>Store ID:</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"storeId\"\r\n                        value={review.storeId}\r\n                        onChange={handleChange}\r\n                        placeholder=\"가게 ID를 입력하세요.\"\r\n                        required\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <label>Rating:</label>\r\n                    <input\r\n                        type=\"number\"\r\n                        name=\"rating\"\r\n                        value={review.rating}\r\n                        onChange={handleChange}\r\n                        min=\"1\"\r\n                        max=\"5\"\r\n                        placeholder=\"1에서 5 사이로 평가해주세요.\"\r\n                        required\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <label>Review Comment:</label>\r\n                    <textarea\r\n                        name=\"reviewComment\"\r\n                        value={review.reviewComment}\r\n                        onChange={handleChange}\r\n                        placeholder=\"리뷰를 작성해주세요.\"\r\n                        required\r\n                    />\r\n                </div>\r\n                <button type=\"submit\">리뷰 작성</button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Review;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}