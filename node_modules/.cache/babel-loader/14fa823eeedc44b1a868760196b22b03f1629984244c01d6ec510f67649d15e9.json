{"ast":null,"code":"var _jsxFileName = \"C:\\\\react-workspace\\\\layout\\\\src\\\\pages\\\\review\\\\Review.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport { getTokenInfo } from \"../../hooks/tokenSlice\";\nimport { getUserInfo } from \"../../hooks/userSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Review = () => {\n  _s();\n  const navigate = useNavigate();\n\n  // Redux에서 로그인 정보를 가져옴\n  const tokenInfo = useSelector(getTokenInfo);\n  const userInfo = useSelector(getUserInfo);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  useEffect(() => {\n    // localStorage에서 로그인 정보 가져오기\n    const storedTokenInfo = JSON.parse(localStorage.getItem(\"tokenInfo\"));\n    const storedUserInfo = JSON.parse(localStorage.getItem(\"userInfo\"));\n\n    // 토큰 정보가 있으면 로그인 상태로 처리\n    if (storedTokenInfo && storedUserInfo) {\n      setIsAuthenticated(true);\n    } else if (tokenInfo && userInfo) {\n      // Redux 상태에도 정보가 있으면 로그인 상태로 처리\n      setIsAuthenticated(true);\n    } else {\n      // 로그인 안 되어 있으면 로그인 페이지로 리다이렉트\n      navigate(\"/user/login\");\n    }\n  }, [tokenInfo, userInfo, navigate]);\n  if (!isAuthenticated) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 12\n    }, this); // 로그인 상태가 아닌 경우 로딩 화면\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uB9AC\\uBDF0 \\uC791\\uC131 \\uD398\\uC774\\uC9C0\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Your review\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit Review\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(Review, \"E3Dg87lsbVuk8MUAUZk0L/+sRkk=\", false, function () {\n  return [useNavigate, useSelector, useSelector];\n});\n_c = Review;\nexport default Review;\nvar _c;\n$RefreshReg$(_c, \"Review\");","map":{"version":3,"names":["useEffect","useState","useNavigate","useSelector","getTokenInfo","getUserInfo","jsxDEV","_jsxDEV","Review","_s","navigate","tokenInfo","userInfo","isAuthenticated","setIsAuthenticated","storedTokenInfo","JSON","parse","localStorage","getItem","storedUserInfo","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","type","_c","$RefreshReg$"],"sources":["C:/react-workspace/layout/src/pages/review/Review.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { getTokenInfo } from \"../../hooks/tokenSlice\";\r\nimport { getUserInfo } from \"../../hooks/userSlice\";\r\n\r\nconst Review = () => {\r\n  const navigate = useNavigate();\r\n\r\n  // Redux에서 로그인 정보를 가져옴\r\n  const tokenInfo = useSelector(getTokenInfo);\r\n  const userInfo = useSelector(getUserInfo);\r\n\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n\r\n  useEffect(() => {\r\n    // localStorage에서 로그인 정보 가져오기\r\n    const storedTokenInfo = JSON.parse(localStorage.getItem(\"tokenInfo\"));\r\n    const storedUserInfo = JSON.parse(localStorage.getItem(\"userInfo\"));\r\n\r\n    // 토큰 정보가 있으면 로그인 상태로 처리\r\n    if (storedTokenInfo && storedUserInfo) {\r\n      setIsAuthenticated(true);\r\n    } else if (tokenInfo && userInfo) {\r\n      // Redux 상태에도 정보가 있으면 로그인 상태로 처리\r\n      setIsAuthenticated(true);\r\n    } else {\r\n      // 로그인 안 되어 있으면 로그인 페이지로 리다이렉트\r\n      navigate(\"/user/login\");\r\n    }\r\n  }, [tokenInfo, userInfo, navigate]);\r\n\r\n  if (!isAuthenticated) {\r\n    return <div>Loading...</div>; // 로그인 상태가 아닌 경우 로딩 화면\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>리뷰 작성 페이지</h1>\r\n      <form>\r\n        <textarea placeholder=\"Your review\"></textarea>\r\n        <button type=\"submit\">Submit Review</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Review;\r\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,YAAY,QAAQ,wBAAwB;AACrD,SAASC,WAAW,QAAQ,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpD,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAMC,QAAQ,GAAGR,WAAW,CAAC,CAAC;;EAE9B;EACA,MAAMS,SAAS,GAAGR,WAAW,CAACC,YAAY,CAAC;EAC3C,MAAMQ,QAAQ,GAAGT,WAAW,CAACE,WAAW,CAAC;EAEzC,MAAM,CAACQ,eAAe,EAAEC,kBAAkB,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EAE7DD,SAAS,CAAC,MAAM;IACd;IACA,MAAMe,eAAe,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,CAAC;IACrE,MAAMC,cAAc,GAAGJ,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,CAAC;;IAEnE;IACA,IAAIJ,eAAe,IAAIK,cAAc,EAAE;MACrCN,kBAAkB,CAAC,IAAI,CAAC;IAC1B,CAAC,MAAM,IAAIH,SAAS,IAAIC,QAAQ,EAAE;MAChC;MACAE,kBAAkB,CAAC,IAAI,CAAC;IAC1B,CAAC,MAAM;MACL;MACAJ,QAAQ,CAAC,aAAa,CAAC;IACzB;EACF,CAAC,EAAE,CAACC,SAAS,EAAEC,QAAQ,EAAEF,QAAQ,CAAC,CAAC;EAEnC,IAAI,CAACG,eAAe,EAAE;IACpB,oBAAON,OAAA;MAAAc,QAAA,EAAK;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,CAAC,CAAC;EAChC;EAEA,oBACElB,OAAA;IAAAc,QAAA,gBACEd,OAAA;MAAAc,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClBlB,OAAA;MAAAc,QAAA,gBACEd,OAAA;QAAUmB,WAAW,EAAC;MAAa;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAW,CAAC,eAC/ClB,OAAA;QAAQoB,IAAI,EAAC,QAAQ;QAAAN,QAAA,EAAC;MAAa;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAAChB,EAAA,CAvCID,MAAM;EAAA,QACON,WAAW,EAGVC,WAAW,EACZA,WAAW;AAAA;AAAAyB,EAAA,GALxBpB,MAAM;AAyCZ,eAAeA,MAAM;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}