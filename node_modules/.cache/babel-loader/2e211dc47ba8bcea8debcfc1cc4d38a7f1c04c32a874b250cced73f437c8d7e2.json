{"ast":null,"code":"var _jsxFileName = \"C:\\\\react-workspace\\\\layout\\\\src\\\\pages\\\\Landing.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useRef, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { getTokenInfo } from \"../hooks/tokenSlice\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Landing = () => {\n  _s();\n  // redux 저장소에 저장된 토큰 정보 호출\n  const tokenInfo = useSelector(getTokenInfo);\n  useEffect(() => {\n    // console.table(tokenInfo);\n    // session storage : 휘발성, 브라우저를 닫으면 삭제된다.\n    // sessionStorage.setItem(\"sessionTest\", \"세션테스트\");\n    // const data = sessionStorage.getItem(\"sessionTest\");\n    // console.log(data);\n    // local storage : 비휘발성, 브라우저를 닫아도 데이터가 유지된다.\n    // 데이터 저장 : localStorage.setItem(키, 벨류)\n    // 데이터 호출 : localStorage.getItem(키)\n    // 데이터 삭제 : localStorage.removeItem(키 )\n    // localStorage.setItem(\"test\", \"테스트\");\n    // const data = localStorage.getItem(\"test\");\n    // console.log(data);\n  }, []);\n\n  // const eventSourceRef = useRef(null);\n  // const [listening, setListening] = useState(false);\n  // const setupEventSource = () => {\n  //   eventSourceRef.current = new EventSource(\n  //     `${process.env.REACT_APP_HOST}/review/save`\n  //   );\n  //   eventSourceRef.current.onopen = (e) => {\n  //     console.log(\"메시지를 받았다.\");\n  //     console.log(e);\n  //   };\n  //   eventSourceRef.current.error = (e) => {\n  //     console.log(\"error\");\n  //     console.log(e);\n  //     eventSourceRef.current?.close();\n  //   };\n  //   eventSourceRef.current?.close();\n\n  //   setListening(true);\n\n  //   return () => {\n  //     eventSourceRef.current?.close();\n  //   };\n  // };\n  // useEffect(() => {\n  //   setupEventSource();\n  //   if (!listening) setupEventSource();\n  // }, []);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Landing page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(Landing, \"lH0218fa0ss2YjeZkaWui2bqPeA=\", false, function () {\n  return [useSelector];\n});\n_c = Landing;\nexport default Landing;\nvar _c;\n$RefreshReg$(_c, \"Landing\");","map":{"version":3,"names":["useEffect","useRef","useState","useSelector","getTokenInfo","jsxDEV","_jsxDEV","Fragment","_Fragment","Landing","_s","tokenInfo","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/react-workspace/layout/src/pages/Landing.js"],"sourcesContent":["import { useEffect, useRef, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { getTokenInfo } from \"../hooks/tokenSlice\";\r\n\r\nconst Landing = () => {\r\n  // redux 저장소에 저장된 토큰 정보 호출\r\n  const tokenInfo = useSelector(getTokenInfo);\r\n\r\n  useEffect(() => {\r\n    // console.table(tokenInfo);\r\n    // session storage : 휘발성, 브라우저를 닫으면 삭제된다.\r\n    // sessionStorage.setItem(\"sessionTest\", \"세션테스트\");\r\n    // const data = sessionStorage.getItem(\"sessionTest\");\r\n    // console.log(data);\r\n    // local storage : 비휘발성, 브라우저를 닫아도 데이터가 유지된다.\r\n    // 데이터 저장 : localStorage.setItem(키, 벨류)\r\n    // 데이터 호출 : localStorage.getItem(키)\r\n    // 데이터 삭제 : localStorage.removeItem(키 )\r\n    // localStorage.setItem(\"test\", \"테스트\");\r\n    // const data = localStorage.getItem(\"test\");\r\n    // console.log(data);\r\n  }, []);\r\n\r\n  // const eventSourceRef = useRef(null);\r\n  // const [listening, setListening] = useState(false);\r\n  // const setupEventSource = () => {\r\n  //   eventSourceRef.current = new EventSource(\r\n  //     `${process.env.REACT_APP_HOST}/review/save`\r\n  //   );\r\n  //   eventSourceRef.current.onopen = (e) => {\r\n  //     console.log(\"메시지를 받았다.\");\r\n  //     console.log(e);\r\n  //   };\r\n  //   eventSourceRef.current.error = (e) => {\r\n  //     console.log(\"error\");\r\n  //     console.log(e);\r\n  //     eventSourceRef.current?.close();\r\n  //   };\r\n  //   eventSourceRef.current?.close();\r\n\r\n  //   setListening(true);\r\n\r\n  //   return () => {\r\n  //     eventSourceRef.current?.close();\r\n  //   };\r\n  // };\r\n  // useEffect(() => {\r\n  //   setupEventSource();\r\n  //   if (!listening) setupEventSource();\r\n  // }, []);\r\n\r\n  return (\r\n    <>\r\n      <div>Landing page</div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Landing;\r\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AACnD,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,YAAY,QAAQ,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEnD,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB;EACA,MAAMC,SAAS,GAAGR,WAAW,CAACC,YAAY,CAAC;EAE3CJ,SAAS,CAAC,MAAM;IACd;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EAAA,CACD,EAAE,EAAE,CAAC;;EAEN;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,oBACEM,OAAA,CAAAE,SAAA;IAAAI,QAAA,eACEN,OAAA;MAAAM,QAAA,EAAK;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK;EAAC,gBACvB,CAAC;AAEP,CAAC;AAACN,EAAA,CApDID,OAAO;EAAA,QAEON,WAAW;AAAA;AAAAc,EAAA,GAFzBR,OAAO;AAsDb,eAAeA,OAAO;AAAC,IAAAQ,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}